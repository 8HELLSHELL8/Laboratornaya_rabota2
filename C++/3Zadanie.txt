#include <iostream>
#include <vector>

using namespace std;

// Функция для переворачивания числа
int reverseNumber(int number) {
    int reversed = 0;
    // Пока число не равно нулю
    while (number != 0) {
        // Получаем последнюю цифру числа
        int lastDigit = number % 10;
        // Добавляем ее к перевернутому числу
        reversed = reversed * 10 + lastDigit;
        // Удаляем последнюю цифру числа
        number /= 10;
    }
    return reversed;
}

// Функция для проверки, является ли последовательность цифр в числе строго возрастающей
bool isIncreasingDigits(int number) {
    int lastDigit = number % 10;
    number /= 10;
    // Пока число больше нуля
    while (number > 0) {
        // Получаем текущую цифру числа
        int currentDigit = number % 10;
        // Если текущая цифра больше или равна предыдущей, последова-тельность не является возрастающей
        if (currentDigit >= lastDigit)
            return false;
        lastDigit = currentDigit;
        // Удаляем последнюю цифру числа
        number /= 10;
    }
    return true;
}

int main()
{
    int n;
    // Запрашиваем количество входящих чисел
    cout << "Введите количество входящих чисел: ";
    cin >> n;

    vector<int> numbers(n);
    // Запрашиваем входящие числа
    cout << "Введите числа через пробел: ";
    for (int i = 0; i < n; ++i) {
        cin >> numbers[i];
    }

    // Проходим по каждому входящему числу
    cout << "Перевернутые числа для возрастающих последовательностей цифр: ";
    for (int number : numbers) {
        // Если последовательность цифр в числе строго возрастающая
        if (isIncreasingDigits(number) == true) {
            // Выводим перевернутое число
            cout << reverseNumber(number) << " ";
        }
    }
    cout << endl;
    return 0;
}

