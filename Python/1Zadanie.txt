def min_operations(input_string):
  # Длина входной строки
  n = len(input_string)
  # Массив для хранения минимального количества операций для каждого индекса
  dp = [0] * (n + 1)
  # Словарь для хранения индекса последнего вхождения каждого символа
  last_occurrence = {}
  # Проходим по каждому символу входной строки
  for i in range(1, n + 1):
    # Инициализируем dp[i] как dp[i-1] + 1, предполагая, что необходимо добавить один символ
    dp[i] = dp[i-1] + 1
    # Если текущий символ уже существует в словаре last_occurrence
    if input_string[i-1] in last_occurrence:
      # Обновляем dp[i] как минимум между текущим dp[i] и dp последнего вхождения символа + 1
      dp[i] = min(dp[i], dp[last_occurrence[input_string[i-1]]] + 1)
    # Обновляем словарь last_occurrence индексом текущего символа
    last_occurrence[input_string[i-1]] = i
  # Возвращаем минимальное количество операций, необходимых для всей строки
  return dp[n]
# Получаем от пользователя строку
input_string = input()
# Вызываем функцию и выводим результат
print(min_operations(input_string))

